{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:8080/books';\nclass BookService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n  get(id) {\n    return this.http.get(`${baseUrl}/${id}`);\n  }\n  create(data) {\n    return this.http.post(baseUrl, data);\n  }\n  update(id, data) {\n    return this.http.put(`${baseUrl}/${id}`, data);\n  }\n  delete(id) {\n    return this.http.delete(`${baseUrl}/${id}`);\n  }\n  deleteAll() {\n    return this.http.delete(baseUrl);\n  }\n}\nBookService.ɵfac = function BookService_Factory(t) {\n  return new (t || BookService)(i0.ɵɵinject(i1.HttpClient));\n};\nBookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BookService,\n  factory: BookService.ɵfac,\n  providedIn: 'root'\n});\nexport { BookService };","map":{"version":3,"names":["baseUrl","BookService","constructor","http","getAll","get","id","create","data","post","update","put","delete","deleteAll","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Tools\\projects\\BibliotechHub\\bibliotechhub-ui\\src\\app\\services\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Book } from '../models/book.model';\r\n\r\nconst baseUrl = 'http://localhost:8080/books';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BookService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAll(): Observable<Book[]> {\r\n    return this.http.get<Book[]>(baseUrl);\r\n  }\r\n\r\n  get(id: any): Observable<Book> {\r\n    return this.http.get<Book>(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  create(data: any): Observable<any> {\r\n    return this.http.post(baseUrl, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.http.delete(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.http.delete(baseUrl);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,6BAA6B;AAE7C,MAGaC,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASL,OAAO,CAAC;EACvC;EAEAK,GAAGA,CAACC,EAAO;IACT,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAO,GAAGL,OAAO,IAAIM,EAAE,EAAE,CAAC;EAChD;EAEAC,MAAMA,CAACC,IAAS;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;EACtC;EAEAE,MAAMA,CAACJ,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,GAAGX,OAAO,IAAIM,EAAE,EAAE,EAAEE,IAAI,CAAC;EAChD;EAEAI,MAAMA,CAACN,EAAO;IACZ,OAAO,IAAI,CAACH,IAAI,CAACS,MAAM,CAAC,GAAGZ,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC7C;EAEAO,SAASA,CAAA;IACP,OAAO,IAAI,CAACV,IAAI,CAACS,MAAM,CAACZ,OAAO,CAAC;EAClC;;AAzBWC,WAAW,C;mBAAXA,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXhB,WAAW,C;SAAXA,WAAW;EAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}