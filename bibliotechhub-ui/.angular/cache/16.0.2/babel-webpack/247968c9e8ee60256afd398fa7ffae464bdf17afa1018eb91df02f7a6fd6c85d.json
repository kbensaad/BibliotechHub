{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet TutorialDetailsComponent = class TutorialDetailsComponent {\n  constructor(tutorialService, route, router) {\n    this.tutorialService = tutorialService;\n    this.route = route;\n    this.router = router;\n    this.viewMode = false;\n    this.currentTutorial = {\n      title: '',\n      description: '',\n      published: false\n    };\n    this.message = '';\n  }\n  ngOnInit() {\n    if (!this.viewMode) {\n      this.message = '';\n      this.getTutorial(this.route.snapshot.params['id']);\n    }\n  }\n  getTutorial(id) {\n    this.tutorialService.get(id).subscribe({\n      next: data => {\n        this.currentTutorial = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  updatePublished(status) {\n    const data = {\n      title: this.currentTutorial.title,\n      description: this.currentTutorial.description,\n      published: status\n    };\n    this.message = '';\n    this.tutorialService.update(this.currentTutorial.id, data).subscribe({\n      next: res => {\n        console.log(res);\n        this.currentTutorial.published = status;\n        this.message = res.message ? res.message : 'The status was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  updateTutorial() {\n    this.message = '';\n    this.tutorialService.update(this.currentTutorial.id, this.currentTutorial).subscribe({\n      next: res => {\n        console.log(res);\n        this.message = res.message ? res.message : 'This tutorial was updated successfully!';\n      },\n      error: e => console.error(e)\n    });\n  }\n  deleteTutorial() {\n    this.tutorialService.delete(this.currentTutorial.id).subscribe({\n      next: res => {\n        console.log(res);\n        this.router.navigate(['/tutorials']);\n      },\n      error: e => console.error(e)\n    });\n  }\n};\n__decorate([Input()], TutorialDetailsComponent.prototype, \"viewMode\", void 0);\n__decorate([Input()], TutorialDetailsComponent.prototype, \"currentTutorial\", void 0);\nTutorialDetailsComponent = __decorate([Component({\n  selector: 'app-tutorial-details',\n  templateUrl: './tutorial-details.component.html',\n  styleUrls: ['./tutorial-details.component.css']\n})], TutorialDetailsComponent);\nexport { TutorialDetailsComponent };","map":{"version":3,"names":["Component","Input","TutorialDetailsComponent","constructor","tutorialService","route","router","viewMode","currentTutorial","title","description","published","message","ngOnInit","getTutorial","snapshot","params","id","get","subscribe","next","data","console","log","error","e","updatePublished","status","update","res","updateTutorial","deleteTutorial","delete","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Tools\\projects\\BibliotechHub\\bibliotechhub-ui\\src\\app\\components\\book-details\\tutorial-details.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { TutorialService } from 'src/app/services/book.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Tutorial } from 'src/app/models/tutorial.model';\r\n\r\n@Component({\r\n  selector: 'app-tutorial-details',\r\n  templateUrl: './tutorial-details.component.html',\r\n  styleUrls: ['./tutorial-details.component.css'],\r\n})\r\nexport class TutorialDetailsComponent implements OnInit {\r\n  @Input() viewMode = false;\r\n\r\n  @Input() currentTutorial: Tutorial = {\r\n    title: '',\r\n    description: '',\r\n    published: false\r\n  };\r\n\r\n  message = '';\r\n\r\n  constructor(\r\n    private tutorialService: TutorialService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (!this.viewMode) {\r\n      this.message = '';\r\n      this.getTutorial(this.route.snapshot.params['id']);\r\n    }\r\n  }\r\n\r\n  getTutorial(id: string): void {\r\n    this.tutorialService.get(id).subscribe({\r\n      next: (data) => {\r\n        this.currentTutorial = data;\r\n        console.log(data);\r\n      },\r\n      error: (e) => console.error(e)\r\n    });\r\n  }\r\n\r\n  updatePublished(status: boolean): void {\r\n    const data = {\r\n      title: this.currentTutorial.title,\r\n      description: this.currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    this.message = '';\r\n\r\n    this.tutorialService.update(this.currentTutorial.id, data).subscribe({\r\n      next: (res) => {\r\n        console.log(res);\r\n        this.currentTutorial.published = status;\r\n        this.message = res.message\r\n          ? res.message\r\n          : 'The status was updated successfully!';\r\n      },\r\n      error: (e) => console.error(e)\r\n    });\r\n  }\r\n\r\n  updateTutorial(): void {\r\n    this.message = '';\r\n\r\n    this.tutorialService\r\n      .update(this.currentTutorial.id, this.currentTutorial)\r\n      .subscribe({\r\n        next: (res) => {\r\n          console.log(res);\r\n          this.message = res.message\r\n            ? res.message\r\n            : 'This tutorial was updated successfully!';\r\n        },\r\n        error: (e) => console.error(e)\r\n      });\r\n  }\r\n\r\n  deleteTutorial(): void {\r\n    this.tutorialService.delete(this.currentTutorial.id).subscribe({\r\n      next: (res) => {\r\n        console.log(res);\r\n        this.router.navigate(['/tutorials']);\r\n      },\r\n      error: (e) => console.error(e)\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}